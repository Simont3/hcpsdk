{"name":"HCPsdk","tagline":"Python3 SDK for Hitachi Content Platform (HCP)","body":"# HCPsdk\r\n\r\nHCPsdk provides a simple SDK to access an Hitachi Content Platform (HCP)\r\nfrom Python3. It handles name resolution, multiple sessions spread across all\r\navailable HCP nodes, persistent connections and recovery from failing\r\nconnections.\r\n\r\nIt's that easy:\r\n\r\n>     >>> import hcpsdk\r\n\r\n>     >>> # initialize an *Authorization* object\r\n>     >>> auth = hcpsdk.NativeAuthorization('user', 'password')\r\n\r\n>     >>> # initialize a *Target* object\r\n>     >>> t = hcpsdk.Target(\"namespace.tenant.hcp.your.domain\",\r\n>                           auth, port=443)\r\n\r\n>     >>> # initialize a Connection to the `Target``\r\n>     >>> c = hcpsdk.Connection(t)\r\n\r\n>     >>> # do something with the connection...\r\n>     >>> r = c.GET('/rest/your_file.txt')\r\n>     >>> c.response_status, c.response_reason\r\n>     (200, 'OK')\r\n>     >>> r.read()\r\n>     b'some data...'\r\n>     >>>\r\n>     >>> c.close()\r\n\r\n\r\n## Features\r\n\r\n* Handles HCP as a target object\r\n* Replica-aware (replica can be part of a target object)\r\n* Various strategies on how to use a replica\r\n* Connection objects, while tied to a target object, allow\r\n  access to HCP through the various http/REST dialects\r\n  (native, HS3, HSwift)\r\n* Higher level modules provide easy access to namespace\r\n  statistics and some MAPI functionality, along with\r\n  the ability to create unique object names / paths\r\n\r\n## Documentation\r\n\r\nHosted at [readthedocs.org](http://hcpsdk.readthedocs.org)\r\n\r\n## Dependencies\r\n\r\n**hcpsdk** depends on these packages:\r\n\r\n*   [dnspython](http://www.dnspython.org) -  Used for non-cached name\r\n    resolution when bypassing the system's resolver.\r\n\r\n*   [sphinx](http://sphinx-doc.org) -  Used for local documentation\r\n    builds from source code and \\*.rst files.\r\n\r\nInstallation\r\n------------\r\n\r\nInstall hcpsdk by running:\r\n\r\n**pip install hcpsdk**\r\n\r\n-or-\r\n\r\n* get the source from [GitHub](https://github.com/Simont3/hcpsdk/archive/master.zip)\r\n* unzip the archive\r\n* run **python setup.py install**\r\n\r\n-or-\r\n\r\n* Fork at [Github](https://github.com/Simont3/hcpsdk)\r\n\r\n## Contribute\r\n\r\n* [Issue Tracker](https://github.com/simont3/hcpsdk/issues)\r\n* [Source Code](https://github.com/Simont3/hcpsdk)\r\n\r\n## Support\r\n\r\nIf you find any bugs, please let us know via the Issue Tracker;\r\nif you have comments or suggestions, send an email to [sw@snomis.de](mailto:sw@snomis.de)\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014-2015 Thorsten Simons (sw@snomis.de)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of\r\nthis software and associated documentation files (the \"Software\"), to deal in\r\nthe Software without restriction, including without limitation the rights to\r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\nthe Software, and to permit persons to whom the Software is furnished to do so,\r\nsubject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}